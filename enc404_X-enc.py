# Obfuscated by Mr.X
import base64
exec(base64.b64decode('IyEvdXNyL2Jpbi9lbnYgcHl0aG9uMwppbXBvcnQgYmFzZTY0CmltcG9ydCBvcwppbXBvcnQgc3lzCmltcG9ydCB0aW1lCgpTVVBQT1JURURfTEFOR1VBR0VTID0gewogICAgInB5IjogIlB5dGhvbiIsCiAgICAic2giOiAiQmFzaCIsCiAgICAiaHRtbCI6ICJIVE1MIiwKICAgICJqcyI6ICJKYXZhU2NyaXB0IiwKICAgICJwaHAiOiAiUEhQIiwKfQoKZGVmIGlzX3ZhbGlkX2VuY29kaW5nKGNvbnRlbnQpOgogICAgIiIiQ2hlY2sgaWYgdGhlIGZpbGUgY2FuIGJlIGVuY29kZWQgd2l0aCBVVEYtOC4iIiIKICAgIHRyeToKICAgICAgICBjb250ZW50LmVuY29kZSgidXRmLTgiKSAgIyBQYXN0aWthbiBkYXBhdCBkaS1lbmNvZGUgVVRGLTgKICAgICAgICByZXR1cm4gVHJ1ZQogICAgZXhjZXB0IFVuaWNvZGVFbmNvZGVFcnJvcjoKICAgICAgICByZXR1cm4gRmFsc2UKCmRlZiBvYmZ1c2NhdGVfcHl0aG9uKGNvbnRlbnQpOgogICAgZW5jb2RlZF9jb250ZW50ID0gYmFzZTY0LmI2NGVuY29kZShjb250ZW50LmVuY29kZSgidXRmLTgiKSkuZGVjb2RlKCJ1dGYtOCIpCiAgICBvYmZ1c2NhdGVkX2NvZGUgPSBmIiIiIyBPYmZ1c2NhdGVkIGJ5IE1yLlgKaW1wb3J0IGJhc2U2NApleGVjKGJhc2U2NC5iNjRkZWNvZGUoJ3tlbmNvZGVkX2NvbnRlbnR9JykuZGVjb2RlKCd1dGYtOCcpKQoiIiIKICAgIHJldHVybiBvYmZ1c2NhdGVkX2NvZGUKCmRlZiBvYmZ1c2NhdGVfYmFzaChjb250ZW50KToKICAgIGVuY29kZWRfY29udGVudCA9IGJhc2U2NC5iNjRlbmNvZGUoY29udGVudC5lbmNvZGUoInV0Zi04IikpLmRlY29kZSgidXRmLTgiKQogICAgb2JmdXNjYXRlZF9jb2RlID0gZiIiIiMhL2Jpbi9iYXNoCiMgT2JmdXNjYXRlZCBieSBNci5YCmJhc2ggPChlY2hvICd7ZW5jb2RlZF9jb250ZW50fScgfCBiYXNlNjQgLWQpCiIiIgogICAgcmV0dXJuIG9iZnVzY2F0ZWRfY29kZQoKZGVmIG9iZnVzY2F0ZV9odG1sKGNvbnRlbnQpOgogICAgZW5jb2RlZF9jb250ZW50ID0gYmFzZTY0LmI2NGVuY29kZShjb250ZW50LmVuY29kZSgidXRmLTgiKSkuZGVjb2RlKCJ1dGYtOCIpCiAgICBvYmZ1c2NhdGVkX3NjcmlwdCA9IGYiIiI8c2NyaXB0Pgo8IS0tIE9iZnVzY2F0ZWQgYnkgTXIuWC0tPgpkb2N1bWVudC53cml0ZShhdG9iKCJ7ZW5jb2RlZF9jb250ZW50fSIpKTsKPC9zY3JpcHQ+IiIiCiAgICByZXR1cm4gb2JmdXNjYXRlZF9zY3JpcHQKCmRlZiBvYmZ1c2NhdGVfamF2YXNjcmlwdChjb250ZW50KToKICAgIGVuY29kZWRfY29udGVudCA9IGJhc2U2NC5iNjRlbmNvZGUoY29udGVudC5lbmNvZGUoInV0Zi04IikpLmRlY29kZSgidXRmLTgiKQogICAgcmV0dXJuIGYiIiIvLyBPYmZ1c2NhdGVkIGJ5IE1yLlgKZXZhbChhdG9iKCJ7ZW5jb2RlZF9jb250ZW50fSIpKTsKIiIiCgpkZWYgb2JmdXNjYXRlX3BocChjb250ZW50KToKICAgIGVuY29kZWRfY29udGVudCA9IGJhc2U2NC5iNjRlbmNvZGUoY29udGVudC5lbmNvZGUoInV0Zi04IikpLmRlY29kZSgidXRmLTgiKQogICAgcmV0dXJuIGYiIiI8P3BocAovKiBPYmZ1c2NhdGVkIGJ5IE1yLlgqLwoKLy8gRGVjb2RlIGJhc2U2NCBkYW4gc2ltcGFuIGtlIGZpbGUgc2VtZW50YXJhCiRkZWNvZGVkID0gYmFzZTY0X2RlY29kZSgie2VuY29kZWRfY29udGVudH0iKTsKJHRlbXBfZmlsZSA9IHRlbXBuYW0oc3lzX2dldF90ZW1wX2RpcigpLCAnb2JmXycpOwpmaWxlX3B1dF9jb250ZW50cygkdGVtcF9maWxlLCAkZGVjb2RlZCk7CgovLyBNZW5qYWxhbmthbiBmaWxlIFBIUCBzZW1lbnRhcmEKaW5jbHVkZSgkdGVtcF9maWxlKTsKdW5saW5rKCR0ZW1wX2ZpbGUpOyAvLyBIYXB1cyBmaWxlIHNlbWVudGFyYSBzZXRlbGFoIGRpZWtzZWt1c2kKPz4KIiIiCgpkZWYgb2JmdXNjYXRlX2NvbnRlbnQoY29udGVudCwgbGFuZ3VhZ2UpOgogICAgaWYgbGFuZ3VhZ2UgPT0gIlB5dGhvbiI6CiAgICAgICAgcmV0dXJuIG9iZnVzY2F0ZV9weXRob24oY29udGVudCkKICAgIGVsaWYgbGFuZ3VhZ2UgPT0gIkJhc2giOgogICAgICAgIHJldHVybiBvYmZ1c2NhdGVfYmFzaChjb250ZW50KQogICAgZWxpZiBsYW5ndWFnZSA9PSAiSFRNTCI6CiAgICAgICAgcmV0dXJuIG9iZnVzY2F0ZV9odG1sKGNvbnRlbnQpCiAgICBlbGlmIGxhbmd1YWdlID09ICJKYXZhU2NyaXB0IjoKICAgICAgICByZXR1cm4gb2JmdXNjYXRlX2phdmFzY3JpcHQoY29udGVudCkKICAgIGVsaWYgbGFuZ3VhZ2UgPT0gIlBIUCI6CiAgICAgICAgcmV0dXJuIG9iZnVzY2F0ZV9waHAoY29udGVudCkKICAgIGVsc2U6CiAgICAgICAgcmFpc2UgVmFsdWVFcnJvcihmIlVuc3VwcG9ydGVkIGxhbmd1YWdlOiB7bGFuZ3VhZ2V9IikKCmRlZiBvYmZ1c2NhdGVfZmlsZShmaWxlX3BhdGgpOgogICAgZXh0ID0gZmlsZV9wYXRoLnNwbGl0KCIuIilbLTFdCiAgICBpZiBleHQgbm90IGluIFNVUFBPUlRFRF9MQU5HVUFHRVM6CiAgICAgICAgcHJpbnQoZiJFcnJvcjogRmlsZSBleHRlbnNpb24gJy57ZXh0fScgbm90IHN1cHBvcnRlZCEiKQogICAgICAgIHN5cy5leGl0KDEpCgogICAgbGFuZ3VhZ2UgPSBTVVBQT1JURURfTEFOR1VBR0VTW2V4dF0KICAgIHRyeToKICAgICAgICB3aXRoIG9wZW4oZmlsZV9wYXRoLCAiciIsIGVuY29kaW5nPSJ1dGYtOCIpIGFzIGY6ICAjIEJhY2EgZmlsZSBkZW5nYW4gZW5jb2RpbmcgVVRGLTgKICAgICAgICAgICAgY29udGVudCA9IGYucmVhZCgpCgogICAgICAgICMgUGVtZXJpa3NhYW4gYXBha2FoIGZpbGUgYmlzYSBkaS1lbmNvZGUgZGVuZ2FuIFVURi04CiAgICAgICAgaWYgbm90IGlzX3ZhbGlkX2VuY29kaW5nKGNvbnRlbnQpOgogICAgICAgICAgICByYWlzZSBWYWx1ZUVycm9yKCJGaWxlIGNvbnRhaW5zIG5vbi1VVEYtOCBjaGFyYWN0ZXJzIG9yIHVuc3VwcG9ydGVkIGVuY29kaW5nLiIpCgogICAgICAgIG9iZnVzY2F0ZWRfY29udGVudCA9IG9iZnVzY2F0ZV9jb250ZW50KGNvbnRlbnQsIGxhbmd1YWdlKQogICAgICAgIG91dHB1dF9maWxlID0gZiJ7b3MucGF0aC5zcGxpdGV4dChmaWxlX3BhdGgpWzBdfV9YLWVuYy57ZXh0fSIKICAgICAgICB3aXRoIG9wZW4ob3V0cHV0X2ZpbGUsICJ3IiwgZW5jb2Rpbmc9InV0Zi04IikgYXMgZjogICMgVHVsaXMgZmlsZSBkZW5nYW4gZW5jb2RpbmcgVVRGLTgKICAgICAgICAgICAgZi53cml0ZShvYmZ1c2NhdGVkX2NvbnRlbnQpCgogICAgICAgICMgVGFtcGlsa2FuIGhhc2lsIHN1a3NlcyBkZW5nYW4gd2FybmEgaGlqYXUKICAgICAgICBwcmludChmIlwwMzNbOTJteycgJyoxfeKVlOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVlyIpCiAgICAgICAgcHJpbnQoZiJ7JyAgICcqMX1TdGF0dXM6IFN1Y2Nlc3MiKQogICAgICAgIHByaW50KGYieycgICAnKjF9T3JpZ2luYWwgRmlsZToge2ZpbGVfcGF0aH0iKQogICAgICAgIHByaW50KGYieycgICAnKjF9T2JmdXNjYXRlZCBGaWxlOiB7b3V0cHV0X2ZpbGV9IikKICAgICAgICBwcmludChmInsnICcqMX3ilZrilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZ1cMDMzWzBtIikKICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgICAgICAjIFRhbXBpbGthbiBoYXNpbCBnYWdhbCBkZW5nYW4gd2FybmEgbWVyYWgKICAgICAgICBwcmludChmIlwwMzNbOTFteycgJyoxfeKVlOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVlyIpCiAgICAgICAgcHJpbnQoZiJ7JyAgICcqMX1TdGF0dXM6IEZhaWxlZCBCeSBDWTQwNCIpCiAgICAgICAgcHJpbnQoZiJ7JyAgICcqMX1PcmlnaW5hbCBGaWxlOiB7ZmlsZV9wYXRofSIpCiAgICAgICAgcHJpbnQoZiJ7JyAgICcqMX1PYmZ1c2NhdGVkIEZpbGU6IFVua25vd24iKQogICAgICAgIHByaW50KGYieycgICAnKjF9RW5nbGlzaDoge3N0cihlKX0iKQogICAgICAgIHByaW50KGYieycgICAnKjF9U3VnZ2VzdGlvbjogQ2hlY2sgaWYgdGhlIGZpbGUgY29udGFpbnMgdmFsaWQgVVRGLTggY2hhcmFjdGVycy4iKQogICAgICAgIHByaW50KGYieycgICAnKjF9SW5kb25lc2lhOiBGaWxlIG1lbmdhbmR1bmcga2FyYWt0ZXIgbm9uLVVURi04IGF0YXUgZW5jb2RpbmcgdGlkYWsgZGlkdWt1bmcuIikKICAgICAgICBwcmludChmInsnICAgJyoxfVNhcmFuOiBQYXN0aWthbiBmaWxlIG1lbmdndW5ha2FuIGVuY29kaW5nIFVURi04IHlhbmcgdmFsaWQuIikKICAgICAgICBwcmludChmInsnICcqMX3ilZrilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZ1cMDMzWzBtIikKCiAgICAgICAgdGltZS5zbGVlcCgxKSAgIyBEZWxheSAxIGRldGlrIHVudHVrIG1lbmdoaW5kYXJpIHNwYW0KCmlmIF9fbmFtZV9fID09ICJfX21haW5fXyI6CiAgICBpZiBsZW4oc3lzLmFyZ3YpICE9IDI6CiAgICAgICAgcHJpbnQoIlVzYWdlOiBweXRob24zIFgtZW5jLnB5IDxmaWxlPiIpCiAgICAgICAgc3lzLmV4aXQoMSkKCiAgICBpbnB1dF9maWxlID0gc3lzLmFyZ3ZbMV0KICAgIGlmIG5vdCBvcy5wYXRoLmV4aXN0cyhpbnB1dF9maWxlKToKICAgICAgICBwcmludChmIkVycm9yOiBGaWxlICd7aW5wdXRfZmlsZX0nIG5vdCBmb3VuZCEiKQogICAgICAgIHN5cy5leGl0KDEpCgogICAgb2JmdXNjYXRlX2ZpbGUoaW5wdXRfZmlsZSkKCg==').decode('utf-8'))

